@model IEnumerable<POYA.Areas.FunFiles.Models.FunDir>
@using POYA.Areas.FunFiles.Controllers;

@{
    ViewData["Title"] =Localizer[ "Folder"]+" & "+Localizer["Files"];
    Layout = "~/Views/Shared/_Layout.cshtml";

    var FunYourFiles=ViewData[nameof(FunYourFile)+"s"] as List<FunYourFile>;
        
    var FunYourFilesUnionFunDirs=Model
        .Select(
            p=>new{
                DOXXX=p.DOCreating, 
                Name=p.Name, 
                Id=p.Id, 
                Size=string.Empty,
                IsFile=false})
        .Union(
            FunYourFiles.Select(
                p=>new{
                    DOXXX=p.DOUploading, 
                    Name=p.Name, 
                    Id=p.Id, 
                    Size=p.FileSize,
                    IsFile=true,
                }
            )
        );
    
    var ParentDirId=Guid.Parse(ViewData["ParentDirId"].ToString());

    var FunDirPath=ViewData["FunDirPath"] as List<FunDir>;
}

<h1>@(ViewData["Title"])</h1>

<p>
    <a class="btn btn-outline-info" id="FunDirsCreate" >@(Localizer["New directory"])</a>
    <a class="btn btn-outline-info" asp-action="FunUploadFiles" asp-controller='FunYourFiles' asp-route-ParentDirId='@(ParentDirId)'>
        @(Localizer["Upload files"])
    </a>

    <nav aria-label="breadcrumb" class="PathBreadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
            </li> 
            @foreach (var item in FunDirPath)
            {
                <li class="breadcrumb-item">
                    <a href='@(Url.Action("Index",new{ParentDirId=item.Id}))'>@(item.Name)</a>
                </li> 
            } 
            <li class="breadcrumb-item">
            </li> 
        </ol>
    </nav>
</p>


@if(FunYourFilesUnionFunDirs.Count()>0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @(Html.DisplayNameFor(model => model.Name))
                </th>
                <th>@(Localizer["Size"])</th>
                <th>
                    @(Html.DisplayNameFor(model => model.DOCreating))
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody id="FileAndDir">
            @foreach (var item in FunYourFilesUnionFunDirs) 
            {
                <tr item_id="@(item.Id)" class='FileAndDirTr @(item.IsFile?"file":"dir")'>
                    <td class="ItemName">
                        @if(item.IsFile)
                        {
                            <a asp-action="Details" asp-controller="FunYourFiles" asp-route-Id='@(item.Id)'>
                                @(Html.DisplayFor(modelItem => item.Name))
                            </a>  
                            <a asp-action="DownloadFunFile" asp-controller="FunYourFiles" asp-route-Id="@(item.Id)" class="fun_file_download">
                                @(Html.Raw("\u2b07"))
                            </a>
                        }
                        else
                        {
                            <a asp-action="Index" asp-route-ParentDirId='@(item.Id)'>
                                @(Html.DisplayFor(modelItem => item.Name))
                            </a>  
                        }
                    </td>
                    <td>@(item.Size)</td>
                    <td>
                        @(item.DOXXX.LocalDateTime)
                    </td>
                    <td class="OperationEle">
                        <button id="item_operation_button_@(item.Id)"  item_id='@(item.Id)' class='item_operation_button'>
                            ...
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="DirectoryIsEmptyTip">
        @(Localizer["Directory is empty"])
        <span>
            <script>document.write('[T_T]');</script>
        </span>
    </div>
}

<div class="row">
    <div class="col offset-sm-1 col-sm-10 offset-md-2 col-md-8 offset-lg-4 col-lg-4">
        <div  class="FunFilesPopup">

        </div>

    </div>
</div>


@section Scripts
{

    <script>

        var CurrentMovingId=``;
        var IsCopying=true;

        $(document).ready(()=>{  
          
            ItemOperationButton_ContextMenu();

            $(document).on(`click`,`#FunFilesPopupClose`,(e)=>{  FunFilesPopupBlur(e);  });

            $(document).on(`click`,`.GetDirIndex`,(e)=>{ GetDirIndexClick(e); });

            $(document).on(`click`,`.times_funfiles_popup_close`,(e)=>{  FunFilesPopupBlur(e); });

            $(document).on(`click`,`.CopyOrMoveTo`,(e)=>{ CopyOrMoveToClick(e); });

            $(document).on(`click`,`#FunDirsCreate`,(e)=>{ FunDirsCreateClick(e)});
            
        });


        function DeletingContxtMenuClick(itemKey, opt, e, IsFile=false)
        {
            var item_id=opt.$trigger.attr('item_id');
            $(`.FunFilesPopup`).load(IsFile?`@(Url.Action("Delete","FunYourFiles"))/${item_id}`: `@(Url.Action("Delete","FunDirs"))/${item_id}`); 
            $(`.FunFilesPopup`).show(); 
        }

        function CopyingContxtMenuClick(itemKey, opt, e)
        {
            IsCopying=true;
            CurrentMovingId=opt.$trigger.attr('item_id');
            $(`.FunFilesPopup`).load(
                `@(Url.Action("DirIndex",new{ ParentDirId = ParentDirId}))`,
                ()=>{ ChangeCopyOrMoveToHtmlAndAttr(IsCopying); }
            );
            $(`.FunFilesPopup`).show(); 
        }
        
        function MovingContxtMenuClick(itemKey, opt, e)
        {
            IsCopying=false;
            CurrentMovingId=opt.$trigger.attr('item_id');
            $(`.FunFilesPopup`).load(
                `@(Url.Action("DirIndex",new{ ParentDirId = ParentDirId}))&CurrentMovingDirId=${CurrentMovingId}`,
                ()=>{ChangeCopyOrMoveToHtmlAndAttr(IsCopying); }
            );

            $(`.FunFilesPopup`).show(); 
        }

        function RenamingContextMenuClick(itemKey, opt, e,IsFile){
            if(IsFile)
            {
                $(`.FunFilesPopup`).load(`@(Url.Action("Edit","FunYourFiles"))/`  +opt.$trigger.attr('item_id'));  
            }
            else
            {
                $(`.FunFilesPopup`).load(`@(Url.Action("Edit","FunDirs"))/`  +opt.$trigger.attr('item_id')); 
            }
            $(`.FunFilesPopup`).show(); 
        } 
        


        /**
         * @@param {Event} e
         */
        function FunDirsCreateClick(e)
        {
            $(`.FunFilesPopup`).load(`@(Url.Action("Create","FunDirs", new{ ParentDirId }))`); 
            $(`.FunFilesPopup`).show(); 
        }

        /**
         *@@param {Event} e
         */ 
        function CopyOrMoveToClick(e)
        {
            var item_id=$(e.target).attr("item_id");
            if(IsCopying)
            {
                window.location.href=`@(Url.Action("CopyDirOrFile"))?ParentDirId=${item_id}&Id=`+CurrentMovingId;
            }
            else
            {
                window.location.href=`@(Url.Action("MoveDirOrFile"))?ParentDirId=${item_id}&Id=`+CurrentMovingId;
            }
        }


        /**
         *@@param {Event}e
         */
        function  GetDirIndexClick(e) 
        {
            $(`.FunFilesPopup`).load(
                `@(Url.Action("DirIndex"))?ParentDirId=`+$(e.target).attr(`item_id`),
                ()=>{ ChangeCopyOrMoveToHtmlAndAttr(IsCopying);  }
            );
        }

        function ChangeCopyOrMoveToHtmlAndAttr(IsCopying)
        {
             $(`.CopyOrMoveTo`).html(IsCopying? `@(Html.Raw("\ud83d\udd03"))`:`@(Html.Raw("\ud83d\udccc"))`); 
             $(`.CopyOrMoveTo`).attr("title",IsCopying?`@(Localizer["Copy"])`:`@(Localizer["Move"])`);
        }



        function FunFilesPopupBlur(e){
            $(`.FunFilesPopup`).hide(); 
            $(`.FunFilesPopup`).html(``); 
        }

        function DownloadFunFileClick(id){
            window.location.href=`@(Url.Action("DownloadFunFile","FunYourFiles"))/`+id; 
        }

        function ItemOperationButton_ContextMenu(){  

            $(document).on(`click`,`.item_operation_button`,(e)=>{ 
                $(e.target).contextMenu({x:e.pageX,y:e.pageY}); 
            });

            $.contextMenu({
                selector: '#FileAndDir tr.file',
                items: {
                    'Download': {
                        name: '@(Html.Raw( Localizer["Download"]))',
                        callback: (itemKey, opt, e)=> {  DownloadFunFileClick( opt.$trigger.attr('item_id') );  }    
                    },
                    "Rename": {
                        name: '@(Html.Raw(Localizer["Rename"]))',
                        callback:(itemKey, opt, e)=>{ RenamingContextMenuClick(itemKey, opt, e,true);   },
                    },
                    "Move": {
                        name: `@(Localizer["Move to"])`, 
                        callback:(itemKey, opt, e)=>{ MovingContxtMenuClick(itemKey, opt, e); }, 
                    },
                    "Copy": {
                        name: `@(Localizer["Copy to"])`, 
                        callback:(itemKey, opt, e)=>{ CopyingContxtMenuClick(itemKey, opt, e); }, 
                    },
                    "Delete": {
                        name: `@(Localizer["Delete"])`, 
                        callback:(itemKey, opt, e)=>{ DeletingContxtMenuClick(itemKey, opt, e,true); }, 
                    },
                }
            });  
            
            $.contextMenu({
                selector: '#FileAndDir tr.dir',
                items: {
                    "Rename": {
                        name: '@(Html.Raw(Localizer["Rename"]))',
                        callback:(itemKey, opt, e)=>{ RenamingContextMenuClick(itemKey, opt, e,false);  },
                    },
                    "Move": {
                        name: `@(Localizer["Move to"])`, 
                        callback:(itemKey, opt, e)=>{ MovingContxtMenuClick(itemKey, opt, e); }, 
                    },
                    "Copy": {
                        name: `@(Localizer["Copy to"])`, 
                        callback:(itemKey, opt, e)=>{ CopyingContxtMenuClick(itemKey, opt, e); }, 
                    },
                    "Delete": {
                        name: `@(Localizer["Delete"])`, 
                        callback:(itemKey, opt, e)=>{ DeletingContxtMenuClick(itemKey, opt, e,false); }, 
                    },
                },
            });
          
        }

    </script>
}

@section Styles
{

    <style>
        
        dd,dt{
            word-wrap: break-word;
            word-break: break-all;
        }

        .CopyOrMoveTo{
            cursor: pointer;
            margin-left: 8px;
        }
    
        .times_funfiles_popup_close{
            font-size: 300%;
            position: absolute;
            right: 5px;
            top: 15px;
        }

        .times_funfiles_popup_close:hover{
            color: red;
            transform: scale(1.1);
        }


        .MoveTo{
            color: red;
        }

        .GetDirIndex{
            color: blue;
        }
        .MoveTo,.GetDirIndex{
            cursor: pointer;
            padding: 1px;
            border-radius: 2px;
        }
        .MoveTo:hover,.GetDirIndex:hover{
            box-shadow: 1px 1px 2px palevioletred;
        }

        .FunFilesPopup{
            display: none;
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            margin: auto;
            background-color: white;
            width: max-content;
            height:min-content;
            border-radius: 8px;
            border-color: red;
            border: solid;
            border-color: violet;
            box-shadow: 2px 2px 20px violet;
            text-align:center;
            padding:10px;
        }


        .DirectoryIsEmptyTip{
            width:100%;
            text-align:center;
            color:blue;
            font-size:200%;
        }

        .fun_file_download{
            color: red;
            zoom: 1.2;
            margin-left: 8px;
            text-decoration: underline;
            text-decoration-color: red;
        }

        .item_operation_button{
            cursor: pointer;
            transform: scale(1.5);
        }

        .ItemName{
            word-wrap: break-word;
            word-break: break-all;
        }


        .item_operation_button{
            border: none;
            background-color: transparent;
        }
        

    </style>
}
