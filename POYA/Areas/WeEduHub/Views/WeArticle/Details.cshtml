@model POYA.Areas.WeEduHub.Models.WeArticle
@using POYA.Unities.Helpers
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var AuthorUserId=ViewData["AuthorUserId"]?.ToString()??string.Empty;
    var CurrentUserId=ViewData["CurrentUserId"]?.ToString();
    var AuthorUserEmail=ViewData["AuthorUserEmail"]?.ToString()??string.Empty;
    var _WeArticleFileContentType=ViewData["WeArticleFileContentType"]?.ToString()??string.Empty;
    var _IsSignedIn=SignInManager.IsSignedIn(User);

}

<div class="row" style="height: max-content;">
    <div class="col col-12">
        <div class="wearticle_title">@(Model.Title)</div>
        <span class="wearticle_class_and_">
            @(Localizer[ Model.FirstClassName]) > @(Localizer[Model.SecondClassName]) > @(Model.CustomClass) 
            | @(new string('\u269D',Model.Complex))
            | <a asp-action="Index" asp-controller="WeArticle" asp-area="WeEduHub" asp-route-SetId="@(Model.SetId)">@(Model.SetName)</a>
        </span>

        <div class="float-right content_check_and_">
            <a href="mailto:@(AuthorUserEmail)" title='@(Localizer["Mail to the author"])' >@(Html.Raw("\ud83d\udcec"))</a> | 
            <a asp-action="Create" asp-area="WeEduHub" asp-controller="FContentChecks" asp-route-_ContentId="@(Model.Id)" title='@(Localizer["Tip-off"])'>
                @(Html.Raw("\u2696"))
            </a>
        </div>

    </div>
</div>

<hr/>


<div class="wearticle_content" >
    @if(_WeArticleFileContentType.EndsWith("/pdf"))
    {
        <object 
            id="selected_file_content" 
            type='@(_WeArticleFileContentType)'
            data='@(Url.Action("GetWeArticleFile",new{Id=Model.WeArticleContentFileId,area="WeEduHub"}))' >
            @(Model.Title)
        </object>  
    }
    else if(_WeArticleFileContentType.StartsWith("video/"))
    {
        <video 
            id="selected_file_content" 
            preload="metadata"
            controls >
            <source src='@(Url.Action("GetWeArticleFile",new{Id=Model.WeArticleContentFileId,area="WeEduHub"}))', 
            type='@_WeArticleFileContentType' />   
            <track 
                label='@(Localizer["Video"])'  
                kind="captions"  
                src='@(Url.Action("GetWeArticleFile",new{Id=Model.WeArticleContentFileId,area="WeEduHub"}))'/>

        </video> 
    }
    <hr/>
    <div class="wearticle_comment">@(Model.Comment)</div>
    <div class="wearticle_sign float-right prevent-select">
        @if(Model.IsPositiveSignBeAllowed)
        {
            <span id="PositiveSign">@(Html.Raw("\ud83d\udc4d"))</span>
        }

        @if(Model.IsNegativeSignBeAllowed)
        {
            <span  id="NegativeSign">@(Html.Raw("\ud83d\udc4e"))</span>
        }
    </div>
</div>
<hr/>
<br/>
<br/>

@if(Model.IsCommentBeAllowed)
{

    <h4>@(Localizer["_Comment"])</h4>
    <hr/>
    <div class="row">
        <div class="col col-10 FunCommentsCreate">
        </div>
    </div>

    <div class="row">
        <div class="col col-10 FunCommentsIndex">
        </div>
    </div>

}

<div style="margin-bottom: 50px;"></div>

<div class="wearticle_details__">
    <a id="go_back" class="btn btn-info btn-sm"> @(Localizer["Back"])</a>   
    @if(CurrentUserId==Model.AuthorUserId)
    {
        <a class="wearticle_edit btn btn-info btn-sm" asp-action="Edit" asp-route-id="@Model.Id">@(Localizer["Edit"])</a>    
        <a class="wearticle_delete btn btn-info btn-sm" asp-action="Delete" asp-route-id="@Model.Id">@(Localizer["Delete"])</a>
    }
</div>

@section Scripts
{
    <script>
        var _IsCommentBeAllowed=Boolean(`@(Model.IsCommentBeAllowed?" ":"")`);
        var IsSignedIn=Boolean(`@(_IsSignedIn?" ":"")`);
        var IsAskingForDeleting=false;
        $(document).ready(()=>{
            InitialComment();
            UpdateWeArticleSign();
            $(document).on(`click`,`#FunComment_Create_Submit`, (e)=>{  FunCommentCreateSubmitOnClick(e);})
            $(document).on(`click`,`.FunComment_UserAvatar`,    (e)=>{  FunComment_UserAvatarOnClick(e); })
            $(document).on(`click`,`#NegativeSign`, (e)=>{  PositiveSignOnClick(e, IsPositive=false);})
            $(document).on(`click`,`#PositiveSign`, (e)=>{  PositiveSignOnClick(e );})
            $(document).on(`click`,`.FunComment_Report`,    (e)=>{  FunComment_ReportOnCick(e);})
            $(document).on(`click`,`.FunComment_Delete`,    (e)=>{  FunComment_DeleteOnClick(e)})

        });

        function FunComment_ReportOnCick(e)
        {
            var _target= $(e.target);
            if(_target.hasClass(`IsAskingForReporting`))
            {

            }
            else
            {
                _target.text(`@(Html.Raw(Localizer["U_Report"])) ?`);
                _target.addClass(`IsAskingForReporting`);
                setTimeout(() => {
                    _target.removeClass(`IsAskingForReporting`);
                    _target.text(`@(Html.Raw(Localizer["U_Report"]))`);
                }, 5000);

            }
        }

        function FunComment_DeleteOnClick(e)
        {
            var _target= $(e.target);
            if(_target.hasClass(`IsAskingForDeleting`))
            {
                $.ajax({
                    url:`@(Url.Action("Delete","FunComments"))/`,
                    method:`POST`,
                    data:{id:_target.attr(`item_id`)},
                    headers: { '@(X_DOVEValues.CustomHeaderName)': `@(CSRF.GetAndStoreTokens(Context).RequestToken)`},
                    success:()=>{   _target.parents(`.FunComment_tr`).remove();    },
                    error:()=>{}
                });
            }
            else
            {
                _target.text(`@(Html.Raw(Localizer["Delete"])) ?`);
                _target.addClass(`IsAskingForDeleting`);
                setTimeout(() => {
                    _target.removeClass(`IsAskingForDeleting`);
                    _target.text(`@(Html.Raw(Localizer["Delete"]))`);
                }, 5000);

            }

        }

        function UpdateWeArticleSign()
        {
            $.get(`@Url.Action("WeArticleSignCount")?WeArticleId=@(Model.Id)&IsPositive=true`,(data)=>{  $(`#PositiveSign`).text(`\ud83d\udc4d`+data);  });
            $.get(`@Url.Action("WeArticleSignCount")?WeArticleId=@(Model.Id)&IsPositive=false`,(data)=>{  $(`#NegativeSign`).text(`\ud83d\udc4e`+data);  });
        }

        function PositiveSignOnClick(e, IsPositive=true)
        {
            if(!IsSignedIn)
            {
                window.location.href=`@(Url.Page("/Account/Login",new{area="Identity",returnUrl=Context.Request.Path}))`;
                return;
            };
            $.ajax({
                url:`@Url.Action("WeArticleSignCreate")`,
                method:`GET`,
                data:{WeArticleId:`@(Model.Id)`,IsPositive:IsPositive},
                success:()=>{
                    UpdateWeArticleSign();
                },
                error:()=>{

                }
            });
        }

        function FunComment_UserAvatarOnClick(e)
        {
        　　window.location.href=`@(Url.Page("/Account/ViewUserInfo",new{area="Identity"}))?UserId=`+$(e.target).attr(`user_id`); 
        }

        function InitialComment()
        {
            if(_IsCommentBeAllowed)
            {   
                if(IsSignedIn)
                {
                    $.get(`@(Url.Action("Create","FunComments",new {WeArticleId=Model.Id}))`,(data)=>{ $(`.FunCommentsCreate`).html(data);  })
                }

                $.get(`@(Url.Action("Index","FunComments",new {WeArticleId=Model.Id}))`,(data)=>{ $(`.FunCommentsIndex`).html(data);  })
            }

        }

        function FunCommentCreateSubmitOnClick(e)
        {
            e.preventDefault();
            $.ajax({
                url:`@(Url.Action("Create","FunComments"))`,
                method:`POST`,
                processData: false,
                contentType: false,
                data:new FormData(document.getElementById(`FunComment_Create_Form`)),
                headers: { '@(X_DOVEValues.CustomHeaderName)': `@(CSRF.GetAndStoreTokens(Context).RequestToken)`},
                success:()=>{   InitialComment(); },
                error:()=>{

                }
            });
        }
    </script>
}


@section Styles
{
    <style>
        .CommentContent
        {
            word-wrap: break-word;
            word-break:break-all;
        }
        .wearticle_sign
        {
            transform: scale(1.5);
            cursor: pointer;
        }
        .FunComment_tr
        {
            border: solid;
            border-width: 1px;
            border-color: rgba(203, 71, 243, 0.418);
            border-radius: 10px;
        }
        .FunComment_tr:hover
        {
            border-width: 2px;
            border-color: rgb(216, 14, 243);
            box-shadow: 5px 5px 5px blue;
            cursor: default;
        }
        .DOCommenting
        {
            font-size: 75%;
            color: rgb(28, 28, 224);
        }
        .CommentContent
        {
            font-size: 120%;
        }
        .FunComment_UserName
        {
            color: blue;
            font-size: 75%;
        }

        .FunComment_Delete,.FunComment_Report
        {
            font-size: 75%;
            color: rgb(199, 16, 16);
            cursor: pointer;
        }
        
        table *
        {
            border-color: transparent;
        }
        td{
            border: 0px solid transparent !important;
        }
        .wearticle_comment{
            text-align: left;
        }
        .content_check_and_{
            transform: scale(1.6);
        }
        .content_check_and_:hover
        {
            transform: scale(1.8);
        }
        .content_check_and_ :hover
        {
            text-decoration: none;
        }
        .wearticle_content
        {
            text-align: center;
            height: 70%;
        }

        .wearticle_content object
        {
            border-radius: 5px;
            width: 100%;
            height: 100%;
            background-color: transparent;
        }
        
        .wearticle_content video{
            width: 90%;
        }
        .wearticle_class_and_
        {
            font-size: 80%;
        }
        .wearticle_title
        {
            font-size: 160%;
            width: 80%;
            word-wrap: break-word;
            word-break: break-all;
        }
        
        .wearticle_details__
        {
            position: fixed;
            bottom: 8%;
        }
    </style>
}