@page
@using POYA.Models
@model UserInfoModel
@{
    ViewData["Title"] = Localizer["Your information"];
    ViewData["ActivePage"] = ManageNavPages.UserInfo;
    //  var X_DOVE_XSRF_TOKEN = Guid.NewGuid().ToString();
    //  TempData[nameof(X_DOVE_XSRF_TOKEN)] = X_DOVE_XSRF_TOKEN;
}
<h4>@ViewData["Title"]</h4>
<partial name="_StatusMessage" for="StatusMessage" />
<div class="row">
    <div class="col col-4 col-sm-4 col-md-3">
        <form id="_UserAvatarForm">
            <img name="UserAvatarImg" class="rounded-circle ZoomAvatar" title="@Localizer["jpg|jpeg|png|gif"]"/>
            <input id="_UserAvatarInput" type="file" accept=".jpg,.png,.jpeg" hidden />
        </form>
        <h6 id="_UploadAvatarMsgEle"></h6>
    </div>
    <div class=" col col-10 col-sm-8 col-md-9">
        <form id="profile-form" method="post">
            @*<div asp-validation-summary="All" class="text-danger"></div>*@
            <div style="border-radius:10px;border:solid;border-color:#EE7AE9;padding:20px;box-shadow: 4px 4px 10px #EE7AE9;">
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="Input.DOBirth"></label>
                        <label asp-for="Input.IsDOBirthOvert">
                            <input asp-for="Input.IsDOBirthOvert" />
                            @Html.DisplayNameFor(m => m.Input.IsDOBirthOvert)
                        </label>
                    </div>
                    <input asp-for="Input.DOBirth" class="form-control" type="date" value="@(Model.Input.DOBirth==null?DateTimeOffset.Now.ToString("yyyy-MM-dd"):Model.Input.DOBirth?.ToString("yyyy-MM-dd"))" />
                    <span asp-validation-for="Input.DOBirth" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="Input.Hobby"></label>
                        <label asp-for="Input.IsHobbyOvert">
                            <input asp-for="Input.IsHobbyOvert" />
                            @Html.DisplayNameFor(m => m.Input.IsHobbyOvert)
                        </label>
                    </div>
                    <input asp-for="Input.Hobby" class="form-control" />
                    <span asp-validation-for="Input.Hobby" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="Input.GraduatedFrom"></label>
                        <label asp-for="Input.IsGraduatedFromOvert">
                            <input asp-for="Input.IsGraduatedFromOvert" />
                            @Html.DisplayNameFor(m => m.Input.IsGraduatedFromOvert)
                        </label>
                    </div>
                    <input asp-for="Input.GraduatedFrom" class="form-control" />
                    <span asp-validation-for="Input.GraduatedFrom" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="Input.Occupation"></label>
                        <label asp-for="Input.IsOccupationOvert">
                            <input asp-for="Input.IsOccupationOvert" />
                            @Html.DisplayNameFor(m => m.Input.IsOccupationOvert)
                        </label>
                    </div>
                    <input asp-for="Input.Occupation" class="form-control" />
                    <span asp-validation-for="Input.Occupation" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="Input.Address"></label>
                        <label asp-for="Input.IsAddressOvert">
                            <input asp-for="Input.IsAddressOvert" />
                            @Html.DisplayNameFor(m => m.Input.IsAddressOvert)
                        </label>
                    </div>
                    <input asp-for="Input.Address" class="form-control" />
                    <span asp-validation-for="Input.Address" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="Input.OriginalAddress"></label>
                        <label asp-for="Input.IsOriginalAddressOvert">
                            <input asp-for="Input.IsOriginalAddressOvert" />
                            @Html.DisplayNameFor(m => m.Input.IsOriginalAddressOvert)
                        </label>
                    </div>
                    <input asp-for="Input.OriginalAddress" class="form-control" />
                    <span asp-validation-for="Input.OriginalAddress" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="Input.MaritalStatus"></label>
                        <label asp-for="Input.IsMaritalStatusOvert">
                            <input asp-for="Input.IsMaritalStatusOvert" />
                            @Html.DisplayNameFor(m => m.Input.IsMaritalStatusOvert)
                        </label>
                    </div>
                    <input asp-for="Input.MaritalStatus" class="form-control" />
                    <span asp-validation-for="Input.MaritalStatus" class="text-danger"></span>
                </div>
            </div>
            <button id="update-profile-button" type="submit" class="btn btn-outline-info col col-4" style="margin-top:20px">@Localizer["Save"]</button>
        </form>
    </div>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        //========      VALUE   ========//
        var IsAvatarUploaded = false;
        var _allowedAvatarFileExtensions = ["jpg","jpeg","png"];

    </script>
    <script>
        //========      DATA    ========//
        function _UserAvatarFormClick() {
            if (IsAvatarUploaded) return;
            $('#_UserAvatarInput').click();
        }
    </script>
    <script>
        //========    SERVICE   ========//
        function UpdateUserAvatar() {
            $("[name='UserAvatarImg']").attr("src", "/Home/GetAvatar?random=" + Math.floor(Math.random() * 100 + 1));
        }

        function _UserAvatarInputOnChange() {
            var _file_ = document.getElementById("_UserAvatarInput").files[0];
            var _UploadAvatarMsgEle_ = $("#_UploadAvatarMsgEle");
            //  console.log(_file_.size);
            if (_file_.size > 1024 * 1024) {
                _UploadAvatarMsgEle_.html("@Localizer["Oops...., the size of avatar should be less than 1M"]");
                return;
            }
            var _value_ = $("#_UserAvatarInput").val();
            var index = _value_.lastIndexOf(".");
            var _extension = _value_.substr(index + 1);
            var _isExtensionAllowed = false;
            //  console.log(">>>>" + _extension);
            _allowedAvatarFileExtensions.forEach((value, index, array) => {
                //  console.log(value);
                if (_extension == value) {
                    _isExtensionAllowed = true;
                    //  console.log(">>>>>" + _isExtensionAllowed);
                    return false;
                }
            });
            if (!_isExtensionAllowed) {
                //  console.log(">>>>>0" + _isExtensionAllowed);
                _UploadAvatarMsgEle_.html("@Localizer["The extension of the file can only be jpg, jpeg or png"]");
                return;
            }

            if ($("#_UserAvatarInput").val() == "") return;
            var AvatarForm = new FormData();
            AvatarForm.append("avatarFile", _file_);
            //  AvatarForm.append("X_DOVE-XSRF-TOKEN", _X_DOVE_XSRF_TOKEN_);
            $.ajax({
                url: "/Home/UploadAvatar",
                type: "POST",
                data: AvatarForm,
                contentType: false,
                processData: false,
                dataType: "json",
                headers: {
                "L-XSRF-TOKEN": "@(CSRF.GetAndStoreTokens(HttpContext).RequestToken)"
                },
                success: function (data) {
                    if (data["status"] == true) {
                        _UploadAvatarMsgEle_.html("@Localizer["Uploaded successfully"]!");
                        UpdateUserAvatar();
                    } else {
                        if (data["msg"] == "ExceedSize") {
                            _UploadAvatarMsgEle_.html("@Localizer["Oops...., the size of avatar should be less than 1M"]");
                        } else if (data["msg"] == "RefuseExtension") {
                            _UploadAvatarMsgEle_.html("@Localizer["The extension of the file can only be jpg, jpeg or png"]");
                        }
                    }
                },
                error: function (msg) {
                    _UploadAvatarMsgEle_.html("@Localizer["An error has occurred. . . , engineers are on their way"]");
                    //  console.log(msg);
                }
            });
            $("#_UserAvatarInput").val(null);
            //  event.preventDefault();
        }
    </script>
    <script>
        //========      UI      ========//

    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("input").attr("autocomplete", "off");
            $("#_UserAvatarForm img:first").on("click", function () {
                _UserAvatarFormClick();
                event.preventDefault();
            });
            $("#_UserAvatarInput").on("change", function () {
                _UserAvatarInputOnChange();
                event.preventDefault();
            });
        });


    </script>
}
@section Styles {
    <style>

        #_UploadAvatarMsgEle {
            font-size: 90%;
            word-break: break-all;
            word-wrap: break-word;
            text-align:center;
        }

        .form-group .checkbox label {
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        .ZoomAvatar {
            height: 100px;
            width: 100px;
            border: solid;
            border-color: #EE7AE9;
            box-shadow: 2px 2px 8px #EE7AE9;
        }

            .ZoomAvatar:hover {
                animation: AvatarAnimation 0.2s linear 1 forwards;
            }

        @@keyframes AvatarAnimation {
            0% {
                height: 100px;
                width: 100px;
            }

            100% {
                height: 120px;
                width: 120px;
            }
        }
    </style>
}